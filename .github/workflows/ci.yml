name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  rspec:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      RAILS_ENV: test
      KNAPSACK_PRO_CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
      KNAPSACK_PRO_CI_NODE_INDEX: ${{ matrix.ci_node_index }}
      DATABASE_URL_TEST: postgres://postgres:postgres@localhost:5432/Forem_test
      DATABASE_NAME_TEST: Forem_test

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [6]
        ci_node_index: [0, 1, 2, 3, 4, 5]

    steps:
      - name: Install cURL Headers
        run: sudo apt-get install libcurl4-openssl-dev
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-modules-
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle exec rails db:test:prepare
      - name: RSpec
        env:
          KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC }}
        run: bin/knapsack_pro_rspec

  jest:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      RAILS_ENV: test
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-modules-
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn test --colors
      - run: yarn build-storybook

  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/Forem_prod_test
      DATABASE_NAME: Forem_prod_test
      DATABASE_URL_TEST: postgres://postgres:postgres@localhost:5432/Forem_test
      DATABASE_NAME_TEST: Forem_test

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Install cURL Headers
        run: sudo apt-get install libcurl4-openssl-dev
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-modules-
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bin/test-console-check

  cypress:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/Forem_prod_test
      DATABASE_NAME: Forem_prod_test
      DATABASE_URL_TEST: postgres://postgres:postgres@localhost:5432/Forem_test
      DATABASE_NAME_TEST: Forem_test

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [3]
        ci_node_index: [0, 1, 2, 3]

    steps:
      - name: Install cURL Headers
        run: sudo apt-get install libcurl4-openssl-dev
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-modules-
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle exec rails db:test:prepare assets:precompile
      - run: yarn cypress install
      - name: cypress
        env:
          KNAPSACK_PRO_CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          KNAPSACK_PRO_CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          KNAPSACK_PRO_TEST_SUITE_TOKEN_CYPRESS: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_CYPRESS }}
          KNAPSACK_PRO_TEST_FILE_PATTERN: "cypress/e2e/seededFlows/**/*.spec.js"
        run: bin/knapsack_pro_cypress
        if: ${{ matrix.ci_node_index < 3 }}
      - name: cypress non-seed
        run: CREATOR_ONBOARDING_SEED_DATA=1 E2E_FOLDER=creatorOnboardingFlows E2E=true bin/rails cypress:run
        if: ${{ matrix.ci_node_index == 3 }}
