name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  bundle_install:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test

    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

  yarn_install:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v3
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-node-modules-
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - run: yarn install --immutable-cache

  assets_precompile:
    runs-on: ubuntu-latest
    needs:
      - bundle_install
      - yarn_install
    timeout-minutes: 15
    env:
      RAILS_ENV: test
      NODE_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/Forem_prod_test
      DATABASE_NAME: Forem_prod_test
      APP_PROTOCOL: http://
      APP_DOMAIN: localhost:3000
      HEROKU_APP_URL: practicaldev.herokuapp.com
      SECRET_KEY_BASE: dummydummydummy
      GITHUB_KEY: dummy
      GITHUB_SECRET: dummy
      KNAPSACK_PRO_FIXED_QUEUE_SPLIT: true

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-node-modules-
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - run: yarn install --immutable-cache
      - name: Cache public/assets
        uses: actions/cache@v3
        with:
          path: public/assets
          key: ${{ runner.os }}-assets_precompile
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle exec rails assets:precompile
      - run: yarn run postcss
      - run: bin/test-console-check

  Jest:
    runs-on: ubuntu-latest
    needs:
      - yarn_install
    timeout-minutes: 10
    env:
      RAILS_ENV: test
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v3
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-node-modules-
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - run: yarn install --immutable-cache
      - run: yarn lint:frontend
      - run: yarn test --colors --ci --reporters=jest-junit
      - name: Upload test results to BuildPulse for flaky test detection
        if: '!cancelled()' # Run this step even when the tests fail. Skip if the workflow is cancelled.
        uses: Workshop64/buildpulse-action@master
        with:
          account: ${{ secrets.BUILDPULSE_ACCOUNT }}
          repository: ${{ secrets.BUILDPULSE_REPOSITORY }}
          path: junit.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}
      - uses: codecov/codecov-action@v3
        with:
          flags: javascript
      - run: yarn build-storybook
